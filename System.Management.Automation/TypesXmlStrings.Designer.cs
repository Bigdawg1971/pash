//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TypesXmlStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TypesXmlStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Management.Automation.TypesXmlStrings", typeof(TypesXmlStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ,.
        /// </summary>
        public static string AllowedNodesSeparator {
            get {
                return ResourceManager.GetString("AllowedNodesSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the registry key: {0}{1} using {2} to load the configuration files..
        /// </summary>
        public static string CannotFindRegistryKey {
            get {
                return ResourceManager.GetString("CannotFindRegistryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the path {0} specified in the registry key: {1}{2}. Using {3} to load the configuration files..
        /// </summary>
        public static string CannotFindRegistryKeyPath {
            get {
                return ResourceManager.GetString("CannotFindRegistryKeyPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CodeProperty should have getter or setter..
        /// </summary>
        public static string CodePropertyShouldHaveGetterOrSetter {
            get {
                return ResourceManager.GetString("CodePropertyShouldHaveGetterOrSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} : File skipped because it was already loaded by {2}..
        /// </summary>
        public static string DuplicateFile {
            get {
                return ResourceManager.GetString("DuplicateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: File skipped because it was already present..
        /// </summary>
        public static string DuplicateFileInInitialSessionState {
            get {
                return ResourceManager.GetString("DuplicateFileInInitialSessionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member {0} is already present..
        /// </summary>
        public static string DuplicateMember {
            get {
                return ResourceManager.GetString("DuplicateMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one members with name &quot;{0}&quot; defined in the type file..
        /// </summary>
        public static string DuplicateMembersDefinedInType {
            get {
                return ResourceManager.GetString("DuplicateMembersDefinedInType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} : File skipped because it does not have the ps1xml extension..
        /// </summary>
        public static string EntryShouldBeMshXml {
            get {
                return ResourceManager.GetString("EntryShouldBeMshXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert note &quot;{0}&quot;:&quot;{1}&quot;..
        /// </summary>
        public static string ErrorConvertingNote {
            get {
                return ResourceManager.GetString("ErrorConvertingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception: {0}.
        /// </summary>
        public static string Exception {
            get {
                return ResourceManager.GetString("Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML tag &quot;{0}&quot; instead of &quot;{1}&quot;..
        /// </summary>
        public static string ExpectedNodeNameInstead {
            get {
                return ResourceManager.GetString("ExpectedNodeNameInstead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected XML tag &quot;{0}&quot; instead of node of type &quot;{1}&quot;..
        /// </summary>
        public static string ExpectedNodeTypeInstead {
            get {
                return ResourceManager.GetString("ExpectedNodeTypeInstead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} : {2}.
        /// </summary>
        public static string FileError {
            get {
                return ResourceManager.GetString("FileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1}({2}) : Error: {3}.
        /// </summary>
        public static string FileLineError {
            get {
                return ResourceManager.GetString("FileLineError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1}({2}) : Error in type &quot;{3}&quot;: {4}.
        /// </summary>
        public static string FileLineTypeError {
            get {
                return ResourceManager.GetString("FileLineTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} : File not found..
        /// </summary>
        public static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The adapted type &quot;{0}&quot; is not valid..
        /// </summary>
        public static string InvalidAdaptedType {
            get {
                return ResourceManager.GetString("InvalidAdaptedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; should not have &quot;{1}&quot; attribute..
        /// </summary>
        public static string IsHiddenNotSupported {
            get {
                return ResourceManager.GetString("IsHiddenNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value should be &quot;true&quot; or &quot;false&quot; instead of &quot;{0}&quot; for &quot;{1}&quot; attribute..
        /// </summary>
        public static string IsHiddenValueShouldBeTrueOrFalse {
            get {
                return ResourceManager.GetString("IsHiddenValueShouldBeTrueOrFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; must be present when the &quot;{1}&quot; is &quot;{2}&quot; and &quot;{3}&quot; is &quot;{4}&quot;..
        /// </summary>
        public static string MemberMustBePresent {
            get {
                return ResourceManager.GetString("MemberMustBePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &quot;{0}&quot; must be a note..
        /// </summary>
        public static string MemberShouldBeNote {
            get {
                return ResourceManager.GetString("MemberShouldBeNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to member &quot;{0}&quot; must have type &quot;{1}&quot;..
        /// </summary>
        public static string MemberShouldHaveType {
            get {
                return ResourceManager.GetString("MemberShouldHaveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member &quot;{0}&quot; must not be present.
        /// </summary>
        public static string MemberShouldNotBePresent {
            get {
                return ResourceManager.GetString("MemberShouldNotBePresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; was not found. It should be present at least once under &quot;{1}&quot;. The parent node &quot;{1}&quot; will be ignored..
        /// </summary>
        public static string NodeNotFoundAtLeastOnce {
            get {
                return ResourceManager.GetString("NodeNotFoundAtLeastOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; was not found. It should be present once under &quot;{1}&quot;. The parent node &quot;{1}&quot; will be ignored..
        /// </summary>
        public static string NodeNotFoundOnce {
            get {
                return ResourceManager.GetString("NodeNotFoundOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; should have an inner text..
        /// </summary>
        public static string NodeShouldHaveInnerText {
            get {
                return ResourceManager.GetString("NodeShouldHaveInnerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; should not have an inner text..
        /// </summary>
        public static string NodeShouldNotHaveInnerText {
            get {
                return ResourceManager.GetString("NodeShouldNotHaveInnerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is not a standard member and will be ignored.
        /// </summary>
        public static string NotAStandardMember {
            get {
                return ResourceManager.GetString("NotAStandardMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; should be present only once under &quot;{1}&quot;. The parent node &quot;{1}&quot; will be ignored..
        /// </summary>
        public static string NotMoreThanOnceOne {
            get {
                return ResourceManager.GetString("NotMoreThanOnceOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node &quot;{0}&quot; should be present zero or one time under &quot;{1}&quot;. The parent node &quot;{1}&quot; will be ignored..
        /// </summary>
        public static string NotMoreThanOnceZeroOrOne {
            get {
                return ResourceManager.GetString("NotMoreThanOnceZeroOrOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following member name is reserved: {0}.
        /// </summary>
        public static string ReservedNameMember {
            get {
                return ResourceManager.GetString("ReservedNameMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ScriptProperty should have getter or setter..
        /// </summary>
        public static string ScriptPropertyShouldHaveGetterOrSetter {
            get {
                return ResourceManager.GetString("ScriptPropertyShouldHaveGetterOrSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous error caused all serialization settings to be ignored..
        /// </summary>
        public static string SerializationSettingsIgnored {
            get {
                return ResourceManager.GetString("SerializationSettingsIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TypeTable cannot be updated because the TypeTable might have been created outside of the Runspace..
        /// </summary>
        public static string SharedTypeTableCannotBeUpdated {
            get {
                return ResourceManager.GetString("SharedTypeTableCannotBeUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TypeAdapter was ignored since it is already present..
        /// </summary>
        public static string TypeAdapterAlreadyPresent {
            get {
                return ResourceManager.GetString("TypeAdapterAlreadyPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TypeConverter was ignored since it is already present..
        /// </summary>
        public static string TypeConverterAlreadyPresent {
            get {
                return ResourceManager.GetString("TypeConverterAlreadyPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; should have a value for its property &quot;{1}&quot;..
        /// </summary>
        public static string TypeDataShouldHaveValue {
            get {
                return ResourceManager.GetString("TypeDataShouldHaveValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The TypeData must have &quot;Members&quot;, &quot;TypeConverters&quot;, &quot;TypeAdapters&quot; or &quot;StandardMembers&quot;..
        /// </summary>
        public static string TypeDataShouldNotBeEmpty {
            get {
                return ResourceManager.GetString("TypeDataShouldNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; should not have null or an empty string in its property &quot;{1}&quot;..
        /// </summary>
        public static string TypeDataShouldNotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("TypeDataShouldNotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in TypeData &quot;{0}&quot;: {1}.
        /// </summary>
        public static string TypeDataTypeError {
            get {
                return ResourceManager.GetString("TypeDataTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} path is not fully qualified. Specify a fully qualified type file path..
        /// </summary>
        public static string TypeFileNotRooted {
            get {
                return ResourceManager.GetString("TypeFileNotRooted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &quot;{0}&quot; should be a PSPropertyAdapter..
        /// </summary>
        public static string TypeIsNotTypeAdapter {
            get {
                return ResourceManager.GetString("TypeIsNotTypeAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &quot;{0}&quot; should be a TypeConverter or an PSTypeConverter..
        /// </summary>
        public static string TypeIsNotTypeConverter {
            get {
                return ResourceManager.GetString("TypeIsNotTypeConverter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;Type&quot; node must have &quot;Members&quot;, &quot;TypeConverters&quot;, or &quot;TypeAdapters&quot;..
        /// </summary>
        public static string TypeNodeShouldHaveMembersOrTypeConverters {
            get {
                return ResourceManager.GetString("TypeNodeShouldHaveMembersOrTypeConverters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &quot;{0}&quot; was not found. The type name value must be the full name of the type. Verify the type name and run the command again..
        /// </summary>
        public static string TypeNotFound {
            get {
                return ResourceManager.GetString("TypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared type table cannot be updated with more than one entry..
        /// </summary>
        public static string TypeTableCannotCoExist {
            get {
                return ResourceManager.GetString("TypeTableCannotCoExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There were errors loading TypeTable. Look in the Errors property to get detailed error messages..
        /// </summary>
        public static string TypeTableLoadErrors {
            get {
                return ResourceManager.GetString("TypeTableLoadErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows PowerShell cannot create an instance of the type adapter for the type {0} because of the following exception: {1}..
        /// </summary>
        public static string UnableToInstantiateTypeAdapter {
            get {
                return ResourceManager.GetString("UnableToInstantiateTypeAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create an instance of the type converter for type {0} due to exception: {1}..
        /// </summary>
        public static string UnableToInstantiateTypeConverter {
            get {
                return ResourceManager.GetString("UnableToInstantiateTypeConverter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node of type &quot;{0}&quot; was not expected..
        /// </summary>
        public static string UnexpectedNodeType {
            get {
                return ResourceManager.GetString("UnexpectedNodeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The node {0} cannot be present. Nodes allowed are: {1}..
        /// </summary>
        public static string UnknownNode {
            get {
                return ResourceManager.GetString("UnknownNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, {1} : File skipped because of the following validation exception: {2}..
        /// </summary>
        public static string ValidationException {
            get {
                return ResourceManager.GetString("ValidationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value should be TRUE or FALSE instead of: {0}..
        /// </summary>
        public static string ValueShouldBeTrueOrFalse {
            get {
                return ResourceManager.GetString("ValueShouldBeTrueOrFalse", resourceCulture);
            }
        }
    }
}
