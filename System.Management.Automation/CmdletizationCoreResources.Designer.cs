//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CmdletizationCoreResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CmdletizationCoreResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Management.Automation.CmdletizationCoreResources", typeof(CmdletizationCoreResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of EnumName attribute doesn&apos;t translate to a valid C# identifier: {0}.    Verify EnumName attribute in Cmdlet Definition XML and try again..
        /// </summary>
        public static string EnumWriter_InvalidEnumName {
            get {
                return ResourceManager.GetString("EnumWriter_InvalidEnumName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of Name attribute is not a valid C# identifier: {0}.  Verify Name attribute in Cmdlet Definition XML and try again..
        /// </summary>
        public static string EnumWriter_InvalidValueName {
            get {
                return ResourceManager.GetString("EnumWriter_InvalidValueName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process Cmdlet Definition XML for the following file: {0}. {1}.
        /// </summary>
        public static string ExportCimCommand_ErrorInCmdletizationXmlFile {
            get {
                return ResourceManager.GetString("ExportCimCommand_ErrorInCmdletizationXmlFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote computer returned an invalid cdxml file. The following cmdlet adapter is not supported for importing a cdxml module from a remote computer: {0}.
        /// </summary>
        public static string ImportModule_UnsupportedCmdletAdapter {
            get {
                return ResourceManager.GetString("ImportModule_UnsupportedCmdletAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1}.
        /// </summary>
        public static string ScriptWriter_ConcatenationOfDeserializationExceptions {
            get {
                return ResourceManager.GetString("ScriptWriter_ConcatenationOfDeserializationExceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} cmdlet defines the {1} parameter set more than once.  Verify that the Cmdlet Definition XML does not have duplicate parameter set names and retry..
        /// </summary>
        public static string ScriptWriter_DuplicateParameterSetInStaticCmdlet {
            get {
                return ResourceManager.GetString("ScriptWriter_DuplicateParameterSetInStaticCmdlet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two cmdlet parameters defined within the {0} element have the same name: {1}.  Resolve the conflict in the Cmdlet Definition XML and retry..
        /// </summary>
        public static string ScriptWriter_DuplicateQueryParameterName {
            get {
                return ResourceManager.GetString("ScriptWriter_DuplicateQueryParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process &lt;Enum EnumName=&quot;{0}&quot; ...&gt; element.  {1}.
        /// </summary>
        public static string ScriptWriter_InvalidEnum {
            get {
                return ResourceManager.GetString("ScriptWriter_InvalidEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cmdlets over &apos;{0}&apos; class.
        /// </summary>
        public static string ScriptWriter_ModuleDescription {
            get {
                return ResourceManager.GetString("ScriptWriter_ModuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process the ObjectModelWrapper attribute. The {0} type defines multiple parameter sets. Verify that the Cmdlet Definition XML specifies a valid type in the ObjectModelWrapper attribute and retry..
        /// </summary>
        public static string ScriptWriter_ObjectModelWrapperDefinesMultipleParameterSets {
            get {
                return ResourceManager.GetString("ScriptWriter_ObjectModelWrapperDefinesMultipleParameterSets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process the ObjectModelWrapper attribute. The {0} type is an open generic type.  Verify that the Cmdlet Definition XML specifies a valid type in the ObjectModelWrapper attribute and retry..
        /// </summary>
        public static string ScriptWriter_ObjectModelWrapperIsStillGeneric {
            get {
                return ResourceManager.GetString("ScriptWriter_ObjectModelWrapperIsStillGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process the ObjectModelWrapper attribute. The {0} type is not derived from the following class: {1}.  Verify that the Cmdlet Definition XML specifies a valid type in the ObjectModelWrapper attribute and retry..
        /// </summary>
        public static string ScriptWriter_ObjectModelWrapperNotDerivedFromObjectModelWrapper {
            get {
                return ResourceManager.GetString("ScriptWriter_ObjectModelWrapperNotDerivedFromObjectModelWrapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process the ObjectModelWrapper attribute. The {0} type defines the {1} cmdlet parameter with a {2} attribute parameter that is ignored.  Verify that the Cmdlet Definition XML specifies a valid type in the ObjectModelWrapper attribute and retry..
        /// </summary>
        public static string ScriptWriter_ObjectModelWrapperUsesIgnoredParameterMetadata {
            get {
                return ResourceManager.GetString("ScriptWriter_ObjectModelWrapperUsesIgnoredParameterMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define the {0} parameter for the {1} cmdlet.  The parameter name is already defined by the {2} class.  Change the name of the parameter in Cmdlet Definition XML and retry..
        /// </summary>
        public static string ScriptWriter_ParameterNameConflictsWithCommonParameters {
            get {
                return ResourceManager.GetString("ScriptWriter_ParameterNameConflictsWithCommonParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot define the {0} parameter for the {1} cmdlet. The parameter name is already defined within the {2} xml element.  Change the name of the parameter in Cmdlet Definition XML and retry..
        /// </summary>
        public static string ScriptWriter_ParameterNameConflictsWithQueryParameters {
            get {
                return ResourceManager.GetString("ScriptWriter_ParameterNameConflictsWithQueryParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;!-- ##################################################################
        ///Copyright (c) Microsoft Corporation.  All rights reserved.
        ///################################################################### --&gt;
        ///&lt;!DOCTYPE schema [
        ///  &lt;!ENTITY csharpIdentifierLetterCharacterRegex &quot;\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}&quot;&gt;
        ///  &lt;!ENTITY csharpIdentifierFirstCharacterRegex &quot;&amp;csharpIdentifierLetterCharacterRegex;_&quot;&gt;
        ///  &lt;!ENTITY csharpIdentifierOtherCharacterRegex &quot;&amp;csharpIdentifierL [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Xml_cmdletsOverObjectsXsd {
            get {
                return ResourceManager.GetString("Xml_cmdletsOverObjectsXsd", resourceCulture);
            }
        }
    }
}
