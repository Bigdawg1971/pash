<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ModuleVersion" xml:space="preserve">
    <value>Version number of this module.</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company or vendor of this module</value>
  </data>
  <data name="ManifestMemberNotFound" xml:space="preserve">
    <value>The module to process '{0}', listed in field '{1}' of module manifest '{2}' was not processed because no valid module was found in any module directory.</value>
  </data>
  <data name="ModuleManifestCannotContainBothModuleToProcessAndRootModule" xml:space="preserve">
    <value>The module manifest cannot contain both 'ModuleToProcess' member and 'RootModule' member. Please fix the module manifest file at '{0}' and try again.</value>
  </data>
  <data name="RequiredModuleNotLoaded" xml:space="preserve">
    <value>The required module '{1}' is not loaded. Load the module or remove the module from 'RequiredModules' in the file '{0}'.</value>
  </data>
  <data name="TypesToProcess" xml:space="preserve">
    <value>Type files (.ps1xml) to be loaded when importing this module</value>
  </data>
  <data name="ManifestHeaderLine3" xml:space="preserve">
    <value>Generated on: {0}</value>
  </data>
  <data name="ManifestHeaderLine2" xml:space="preserve">
    <value>Generated by: {0}</value>
  </data>
  <data name="ManifestHeaderLine1" xml:space="preserve">
    <value>Module manifest for module '{0}'</value>
  </data>
  <data name="RemovingImportedAlias" xml:space="preserve">
    <value>Removing the imported "{0}" alias.</value>
  </data>
  <data name="ImportingWorkflow" xml:space="preserve">
    <value>Importing command as workflow '{0}'.</value>
  </data>
  <data name="ModuleLoadedAsASnapin" xml:space="preserve">
    <value>The '{0}' module was not imported because the '{0}' snap-in was already imported.</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author of this module</value>
  </data>
  <data name="RemoteDiscoveryRemotePsrpCommandFailed" xml:space="preserve">
    <value>Failure from remote command: {0}: {{0}}</value>
  </data>
  <data name="RequiredModuleNotLoadedWrongVersion" xml:space="preserve">
    <value>The required module '{1}' with version '{2}' is not loaded. Load the module or remove the module from 'RequiredModules' in the file '{0}'.</value>
  </data>
  <data name="PowerShellHostName" xml:space="preserve">
    <value>Name of the Windows PowerShell host required by this module</value>
  </data>
  <data name="ModuleNotFound" xml:space="preserve">
    <value>The specified module '{0}' was not loaded because no valid module file was found in any module directory.</value>
  </data>
  <data name="ExportingCommandAsWorkflow" xml:space="preserve">
    <value>Exporting command as workflow '{0}'.</value>
  </data>
  <data name="ImportingCmdlet" xml:space="preserve">
    <value>Importing cmdlet '{0}'.</value>
  </data>
  <data name="XamlWorkflowsNotSupported" xml:space="preserve">
    <value>Cannot load workflow. XAML-based workflows are not supported in this language mode. Only script-based workflows are supported.</value>
  </data>
  <data name="ExportingVariable" xml:space="preserve">
    <value>Exporting variable '{0}'.</value>
  </data>
  <data name="ModuleManifestInsufficientModuleVersion" xml:space="preserve">
    <value>The version '{0}' of module '{1}' does not meet the required minimum version '{2}'. Please verify the version number and try loading the module again.</value>
  </data>
  <data name="ExportingAlias" xml:space="preserve">
    <value>Exporting alias '{0}'.</value>
  </data>
  <data name="FormatsFileNotFound" xml:space="preserve">
    <value>The specified format data file '{0}' could not be processed because the file was not found. Please correct the path and try again.</value>
  </data>
  <data name="ModuleManifestInvalidValue" xml:space="preserve">
    <value>The '{0}' member is not valid in the module manifest file '{2}': {1}</value>
  </data>
  <data name="ModuleManifestInsufficientPowerShellVersion" xml:space="preserve">
    <value>The version of the loaded Windows PowerShell is '{0}'. The module '{1}' requires a minimum Windows PowerShell version of '{2}' to run. Please verify the installation of the Windows PowerShell and try again.</value>
  </data>
  <data name="ImportingVariable" xml:space="preserve">
    <value>Importing variable '{0}'.</value>
  </data>
  <data name="EmptyModuleManifest" xml:space="preserve">
    <value>Processing the module manifest file '{0}' did not result in a valid manifest object. Update the file to contain a valid Windows PowerShell module manifest. A valid manifest can be created using the New-ModuleManifest cmdlet.</value>
  </data>
  <data name="CannotDefineWorkflowInconsistentLanguageMode" xml:space="preserve">
    <value>Cannot define workflow. The language mode for this session is incompatible with the system-wide language mode.</value>
  </data>
  <data name="RequiredModuleMissingModuleName" xml:space="preserve">
    <value>The 'ModuleName' member is not present in the hashtable describing a module.</value>
  </data>
  <data name="RemoteDiscoveryFailedToProcessRemoteModule" xml:space="preserve">
    <value>Failed to process the remote module {0}.  {1}</value>
  </data>
  <data name="VariablesToExport" xml:space="preserve">
    <value>Variables to export from this module</value>
  </data>
  <data name="NestedModules" xml:space="preserve">
    <value>Modules to import as nested modules of the module specified in RootModule/ModuleToProcess</value>
  </data>
  <data name="ExportingFunction" xml:space="preserve">
    <value>Exporting function '{0}'.</value>
  </data>
  <data name="ModuleWithVersionNotFound" xml:space="preserve">
    <value>The specified module '{0}' with version '{1}' was not loaded because no valid module file was found in any module directory.</value>
  </data>
  <data name="ImportingNonStandardNounVerbose" xml:space="preserve">
    <value>The command name '{0}' from the module '{1}' contains one or more of the following restricted characters: # , ( ) {{ }} [ ] &amp; - / \ $ ^ ; : " ' &lt; &gt; | ? @ ` * % + = ~</value>
  </data>
  <data name="RequiredModulesCyclicDependency" xml:space="preserve">
    <value>The required module '{0}' is not loaded. The module '{0}' has a requiredModule '{1}' in its module manifest '{2}' that points to a cyclic dependency.</value>
  </data>
  <data name="NoModulesRemoved" xml:space="preserve">
    <value>No modules were removed. Verify that the specification of modules to remove is correct and those modules exist in the runspace.</value>
  </data>
  <data name="ExportAsWorkflowInvalidCommand" xml:space="preserve">
    <value>Command cannot be exported as workflow '{0}'.</value>
  </data>
  <data name="ImportModuleNoClobberForVariable" xml:space="preserve">
    <value>The variable '{0}' was not imported because there is a member with the same name in the current scope.</value>
  </data>
  <data name="ImportingNonStandardVerbVerboseSuggestion" xml:space="preserve">
    <value>The '{0}' command in the {2}' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "{1}".</value>
  </data>
  <data name="PowerShellVersion" xml:space="preserve">
    <value>Minimum version of the Windows PowerShell engine required by this module</value>
  </data>
  <data name="ModuleToProcessFieldDeprecated" xml:space="preserve">
    <value>The module manifest member 'ModuleToProcess' has been deprecated. Please use 'RootModule' instead.</value>
  </data>
  <data name="ModuleToProcess" xml:space="preserve">
    <value>Script module or binary module file associated with this manifest</value>
  </data>
  <data name="ModuleTooDeeplyNested" xml:space="preserve">
    <value>Cannot load module '{0}' because the module nesting limit has been reached. Modules can only be nested to {1} levels. Please reexamine the order in which you are loading modules so that they are not as deeply nested then try running your script again.</value>
  </data>
  <data name="InvalidOperationOnBinaryModule" xml:space="preserve">
    <value>This operation cannot be performed on a binary module. Please try again with a script module.</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright statement for this module</value>
  </data>
  <data name="InvalidWorkflowExtensionDuringManifestProcessing" xml:space="preserve">
    <value>The workflow file name extension is not valid. The workflow file name {0} listed in the WorkflowsToProcess key of the module manifest does not have the required .XAML or .DLL file name extension. Edit the module manifest and correct the workflow file name. If providing .DLL file extension, then provide only one assembly name.</value>
  </data>
  <data name="HelpInfoURI" xml:space="preserve">
    <value>HelpInfo URI of this module</value>
  </data>
  <data name="MixedModuleOverCimSessionWarning" xml:space="preserve">
    <value>Some commands from module {0} cannot be imported over a CimSession.  To get all the commands, verify that the remote server has Windows PowerShell remote management enabled, and then try adding the PSSession parameter to an Import-Module cmdlet.</value>
  </data>
  <data name="CmdletizationDoesSupportRexportingNestedModules" xml:space="preserve">
    <value>The value of the {0} key in {1} is {2} and the module has nested modules. When a CDXML file is the root module, the Import-Module command fails because the commands in nested modules cannot be exported. Move the CDXML file to the NestedModules key and try the command again.</value>
  </data>
  <data name="InvalidModuleSpecificationMember" xml:space="preserve">
    <value>The hashtable describing a module contains one or more members that are not valid.  The valid members are ({0}). Remove the members that are not valid ({1}), then try again.</value>
  </data>
  <data name="DefaultCopyrightMessage" xml:space="preserve">
    <value>(c) {0} {1}. All rights reserved.</value>
  </data>
  <data name="ImportingAlias" xml:space="preserve">
    <value>Importing alias '{0}'.</value>
  </data>
  <data name="CanOnlyBeUsedFromWithinAModule" xml:space="preserve">
    <value>The Export-ModuleMember cmdlet can only be called from inside a module.</value>
  </data>
  <data name="TypesFileNotFound" xml:space="preserve">
    <value>The specified type data file '{0}' could not be processed because the file was not found. Please correct the path and try again.</value>
  </data>
  <data name="ConfirmRemoveModule" xml:space="preserve">
    <value>{0} (Path: '{1}')</value>
  </data>
  <data name="ScriptsFileNotFound" xml:space="preserve">
    <value>The specified script file '{0}' could not be processed because the file was not found. Please correct the path and try again.</value>
  </data>
  <data name="WildCardNotAllowedInRequiredAssemblies" xml:space="preserve">
    <value>Wild card characters are not allowed in the member 'RequiredAssemblies' in the module manifest '{0}'.</value>
  </data>
  <data name="WorkflowsToExport" xml:space="preserve">
    <value>Commands to export from this module as Workflows</value>
  </data>
  <data name="DefaultCommandPrefix" xml:space="preserve">
    <value>Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.</value>
  </data>
  <data name="RemoteDiscoveryFailureFromDiscoveryProvider" xml:space="preserve">
    <value>Failed to receive module data from the remote CimSession.  {0}</value>
  </data>
  <data name="RemoteDiscoveryProviderNotFound" xml:space="preserve">
    <value>CIM provider for module discovery was not found on the CIM server.  {0}</value>
  </data>
  <data name="CLRVersion" xml:space="preserve">
    <value>Minimum version of the common language runtime (CLR) required by this module</value>
  </data>
  <data name="IncludedItemPathFallsOutsideSaveTree" xml:space="preserve">
    <value>The item {0} that resolves to {1} is not located in the same directory as the module manifest or any of its subdirectories. Windows PowerShell looks for items referenced in the manifest only in paths relative to the manifest location. To fix this problem, move the item, and use a relative path to identify its location.</value>
  </data>
  <data name="GlobalAndScopeParameterCannotBeSpecifiedTogether" xml:space="preserve">
    <value>The parameter 'Global' and 'Scope' cannot be specified together. Please remove one of them and try again.</value>
  </data>
  <data name="RemovingImportedFunction" xml:space="preserve">
    <value>Removing the imported "{0}" function.</value>
  </data>
  <data name="ImportModuleNoClobberForWorkflow" xml:space="preserve">
    <value>The command '{0}' was not imported as a workflow because there is a member with the same name in the current scope.</value>
  </data>
  <data name="ImportingNonStandardNoun" xml:space="preserve">
    <value>Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] &amp; - / \ $ ^ ; : " ' &lt; &gt; | ? @ ` * % + = ~</value>
  </data>
  <data name="ImportingNonStandardVerb" xml:space="preserve">
    <value>The names of some imported commands from the module '{0}' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.</value>
  </data>
  <data name="PowerShellHostVersion" xml:space="preserve">
    <value>Minimum version of the Windows PowerShell host required by this module</value>
  </data>
  <data name="LoadingModule" xml:space="preserve">
    <value>Loading module from path '{0}'.</value>
  </data>
  <data name="ImportModuleNoClobberForCmdlet" xml:space="preserve">
    <value>The cmdlet '{0}' was not imported because there is a member with the same name in the current scope.</value>
  </data>
  <data name="ImportModuleNoClobberForFunction" xml:space="preserve">
    <value>The function '{0}' was not imported because there is a member with the same name in the current scope.</value>
  </data>
  <data name="ProcessorArchitecture" xml:space="preserve">
    <value>Processor architecture (None, X86, Amd64) required by this module</value>
  </data>
  <data name="ExportingCmdlet" xml:space="preserve">
    <value>Exporting cmdlet '{0}'.</value>
  </data>
  <data name="RequiredModuleNotFound" xml:space="preserve">
    <value>The required module '{0}' was not loaded because no valid module file was found in any module directory.</value>
  </data>
  <data name="CantUseAsCustomObjectWithBinaryModule" xml:space="preserve">
    <value>No custom object was returned for module '{0}' because the -AsCustomObject parameter can only be used with script modules.</value>
  </data>
  <data name="InvalidModuleManifest" xml:space="preserve">
    <value>The module manifest '{0}' could not be processed because it is not a valid Windows PowerShell restricted language file. Please remove the elements that are not permitted by the restricted language:
{1}</value>
  </data>
  <data name="CannotDetectNetFrameworkVersion" xml:space="preserve">
    <value>Cannot verify the Microsoft .NET Framework version {0} because it is not included in the list of permitted versions.</value>
  </data>
  <data name="DottingScriptFile" xml:space="preserve">
    <value>Dot-sourcing the script file '{0}'.</value>
  </data>
  <data name="ModuleManifestInvalidManifestMember" xml:space="preserve">
    <value>The member '{0}' in the module manifest is not valid: {1}. Please make sure that a valid value is specified for this field in file '{2}'.</value>
  </data>
  <data name="UnableToRemoveModuleMember" xml:space="preserve">
    <value>The '{0}' member, which was imported from module '{1}', cannot be removed for the following reason: {2}</value>
  </data>
  <data name="PrivateData" xml:space="preserve">
    <value>Private data to pass to the module specified in RootModule/ModuleToProcess</value>
  </data>
  <data name="ScriptsToProcess" xml:space="preserve">
    <value>Script files (.ps1) that are run in the caller's environment prior to importing this module.</value>
  </data>
  <data name="RequiredModules" xml:space="preserve">
    <value>Modules that must be imported into the global environment prior to importing this module</value>
  </data>
  <data name="CmdletsToExport" xml:space="preserve">
    <value>Cmdlets to export from this module</value>
  </data>
  <data name="LoadingWorkflow" xml:space="preserve">
    <value>Loading workflow {0}</value>
  </data>
  <data name="ScriptsToProcessIncorrectExtension" xml:space="preserve">
    <value>The file '{0}' is not allowed because it does not have the extension '.ps1'.</value>
  </data>
  <data name="FormatsToProcess" xml:space="preserve">
    <value>Format files (.ps1xml) to be loaded when importing this module</value>
  </data>
  <data name="CoreModuleCannotBeRemoved" xml:space="preserve">
    <value>The module '{0}' is a core module for Windows PowerShell. Use the -force flag to remove core modules.</value>
  </data>
  <data name="InvalidModuleManifestPath" xml:space="preserve">
    <value>Module Manifest path '{0}' is not valid. The path argument must resolve to a single file in the file system with a '.psd1' extension. Please fix the path specification and try again.</value>
  </data>
  <data name="LoadingFile" xml:space="preserve">
    <value>Loading '{0}' from path '{1}'.</value>
  </data>
  <data name="InvalidProcessorArchitectureInManifest" xml:space="preserve">
    <value>The processor architecture value of {0} is not supported. Run the New-ModuleManifest command again specifying one of the following enumeration values. The possible enumeration values are "None, MSIL, X86, Amd64, Arm".</value>
  </data>
  <data name="RemoteDiscoveryWorksOnlyInListAvailableMode" xml:space="preserve">
    <value>Get-Module against a remote computer can only list available modules. Add a ListAvailable switch and try again.</value>
  </data>
  <data name="ModuleManifestMissingModuleVersion" xml:space="preserve">
    <value>The member 'ModuleVersion' is not present in the module manifest. This member must exist and be assigned a version number of the form 'n.n.n.n'. Please add the missing member to the file '{0}'.</value>
  </data>
  <data name="RequiredModuleNotFoundWrongGuidVersion" xml:space="preserve">
    <value>The required module '{0}' with GUID '{1}' and version '{2}' was not loaded because no valid module file was found in any module directory.</value>
  </data>
  <data name="ModuleIsRequired" xml:space="preserve">
    <value>Unable to remove module '{0}' because it is required by '{1}'. Use the -force flag to remove the module.</value>
  </data>
  <data name="InvalidWorkflowExtension" xml:space="preserve">
    <value>The workflow file name is not valid because it does not have the required .XAML file name extension. Run the New-ModuleManifest command again specifying a value for the WorkflowsToProcess parameter with this extension.</value>
  </data>
  <data name="ExportingWorkflow" xml:space="preserve">
    <value>Exporting workflow '{0}'.</value>
  </data>
  <data name="InvalidPowerShellHostVersion" xml:space="preserve">
    <value>The current Windows PowerShell host is: '{0}' (version {1}). The module '{2}' requires a minimum Windows PowerShell host version of '{3}' to run.</value>
  </data>
  <data name="FileList" xml:space="preserve">
    <value>List of all files packaged with this module</value>
  </data>
  <data name="ModuleManifestNestedModulesCantGoWithModuleToProcess" xml:space="preserve">
    <value>The module manifest member 'NestedModules' cannot be used if 'ModuleToProcess' member is a binary module. Please fix the module manifest file at '{0}' and try again.</value>
  </data>
  <data name="RemoteDiscoveryFailedToGenerateProxyForRemoteModule" xml:space="preserve">
    <value>Failed to generate proxies for remote module '{0}'.  {{0}}</value>
  </data>
  <data name="ImportingFunction" xml:space="preserve">
    <value>Importing function '{0}'.</value>
  </data>
  <data name="ModuleAssemblyFound" xml:space="preserve">
    <value>The assembly '{0}' was not loaded because no assembly was found. Please check the assembly name and try again.</value>
  </data>
  <data name="CreatingModuleManifestFile" xml:space="preserve">
    <value>Creating the "{0}" module manifest file.</value>
  </data>
  <data name="RootModule" xml:space="preserve">
    <value>Script module or binary module file associated with this manifest.</value>
  </data>
  <data name="RequiredAssemblies" xml:space="preserve">
    <value>Assemblies that must be loaded prior to importing this module</value>
  </data>
  <data name="ModuleIsConstant" xml:space="preserve">
    <value>Unable to remove module '{0}' because it is marked as constant. A module cannot be removed if it is marked constant.</value>
  </data>
  <data name="InvalidProcessorArchitecture" xml:space="preserve">
    <value>The current processor architecture is: {0}.  The module '{1}' requires the following architecture: {2}.</value>
  </data>
  <data name="DefaultCompanyName" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="FunctionsToExport" xml:space="preserve">
    <value>Functions to export from this module</value>
  </data>
  <data name="RequiredModuleMissingModuleVersion" xml:space="preserve">
    <value>The 'ModuleVersion' member is not present in the hashtable describing a module. This member must exist and be assigned a version number of the form 'n.n.n.n'.</value>
  </data>
  <data name="ModuleManifestInsufficientCLRVersion" xml:space="preserve">
    <value>The version of the loaded CLR is '{0}'. The module '{1}' requires a minimum CLR version of '{2}' to run. Please verify the installation of the CLR and try again.</value>
  </data>
  <data name="ModuleIsReadOnly" xml:space="preserve">
    <value>Unable to remove module '{0}' because it is read-only. Use the -force flag to remove read-only modules.</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description of the functionality provided by this module</value>
  </data>
  <data name="ImportingNonStandardVerbVerbose" xml:space="preserve">
    <value>The '{0}' command in the {1}' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.</value>
  </data>
  <data name="ModuleList" xml:space="preserve">
    <value>List of all modules packaged with this module.</value>
  </data>
  <data name="PsModuleOverCimSessionError" xml:space="preserve">
    <value>The module {0} cannot be imported over a CimSession.  Try using the PSSession parameter of the Import-Module cmdlet.</value>
  </data>
  <data name="RequiredModuleNotLoadedWrongGuid" xml:space="preserve">
    <value>The required module '{1}' with GUID '{2}' is not loaded. Load the module or remove the module from 'RequiredModules' in the file '{0}'.</value>
  </data>
  <data name="WildCardNotAllowedInModuleToProcessAndInNestedModules" xml:space="preserve">
    <value>Wild card characters are not allowed in members 'ModuleToProcess', 'RootModule' and 'NestedModule' in the module manifest '{0}'.</value>
  </data>
  <data name="InvalidModuleExtension" xml:space="preserve">
    <value>The extension '{0}' is not a valid module extension. The supported module extensions are '.dll', '.ps1', '.psm1', '.psd1', '.cdxml' and '.xaml'. Correct the extension then try adding the file '{1}' again.</value>
  </data>
  <data name="InvalidPowerShellHostName" xml:space="preserve">
    <value>The name of the current Windows PowerShell host is: '{0}'. The module '{1}' requires the following PowerShell host: '{2}'.</value>
  </data>
  <data name="RemovingImportedVariable" xml:space="preserve">
    <value>Removing the imported "{0}" variable.</value>
  </data>
  <data name="DotNetFrameworkVersion" xml:space="preserve">
    <value>Minimum version of the .NET Framework required by this module</value>
  </data>
  <data name="ModuleDriveInUse" xml:space="preserve">
    <value>The following module is providing the PSDrive in the current Windows PowerShell session: {0}. Therefore no modules were removed. Change the current PSDrive and retry.</value>
  </data>
  <data name="InvalidDotNetFrameworkVersion" xml:space="preserve">
    <value>The module '{0}' requires the following version of the .NET Framework: {1}.  The required version is not installed.</value>
  </data>
  <data name="AliasesToExport" xml:space="preserve">
    <value>Aliases to export from this module</value>
  </data>
  <data name="InvalidModuleManifestMember" xml:space="preserve">
    <value>The '{0}' module cannot be imported because its manifest contains one or more members that are not valid. The valid manifest members are ({1}). Remove the members that are not valid ({2}), then try to import the module again.</value>
  </data>
  <data name="ImportModuleNoClobberForAlias" xml:space="preserve">
    <value>The alias '{0}' was not imported because there is a member with the same name in the current scope.</value>
  </data>
  <data name="GUID" xml:space="preserve">
    <value>ID used to uniquely identify this module</value>
  </data>
</root>