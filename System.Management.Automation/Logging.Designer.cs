//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Logging {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Logging() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Management.Automation.Logging", typeof(Logging).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	ExceptionClass=[ExceptionClass]
        ///	ErrorCategory=[ErrorCategory]
        ///	ErrorId=[ErrorId]
        ///	ErrorMessage=[ErrorMessage]
        ///
        ///	Severity=[Severity]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string CommandHealthContext {
            get {
                return ResourceManager.GetString("CommandHealthContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	NewCommandState=[NewCommandState]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string CommandLifecycleContext {
            get {
                return ResourceManager.GetString("CommandLifecycleContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	ExceptionClass=[ExceptionClass]
        ///	ErrorCategory=[ErrorCategory]
        ///	ErrorId=[ErrorId]
        ///	ErrorMessage=[ErrorMessage]
        ///
        ///	Severity=[Severity]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine]
        ///
        ///AdditionalInfo:
        ///	Name=[AdditionalInfo_Nam [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EngineHealthContext {
            get {
                return ResourceManager.GetString("EngineHealthContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	NewEngineState=[NewEngineState]
        ///	PreviousEngineState=[PreviousEngineState]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string EngineLifecycleContext {
            get {
                return ResourceManager.GetString("EngineLifecycleContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	DetailSequence=[DetailSequence]
        ///	DetailTotal=[DetailTotal]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	UserId=[User]
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	ScriptName=[ScriptName]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string PipelineExecutionDetailContext {
            get {
                return ResourceManager.GetString("PipelineExecutionDetailContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	ProviderName=[ProviderName]
        ///	ExceptionClass=[ExceptionClass]
        ///	ErrorCategory=[ErrorCategory]
        ///	ErrorId=[ErrorId]
        ///	ErrorMessage=[ErrorMessage]
        ///
        ///	Severity=[Severity]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string ProviderHealthContext {
            get {
                return ResourceManager.GetString("ProviderHealthContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	ProviderName=[ProviderName]
        ///	NewProviderState=[NewProviderState]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string ProviderLifecycleContext {
            get {
                return ResourceManager.GetString("ProviderLifecycleContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	VariableName=[VariableName]
        ///	NewValue=[NewValue]
        ///	PreviousValue=[PreviousValue]
        ///
        ///	SequenceNumber=[SequenceNumber]
        ///
        ///	HostName=[HostName]
        ///	HostVersion=[HostVersion]
        ///	HostId=[HostId]
        ///	EngineVersion=[EngineVersion]
        ///	RunspaceId=[RunspaceId]
        ///	PipelineId=[PipelineId]
        ///	CommandName=[CommandName]
        ///	CommandType=[CommandType]
        ///	ScriptName=[ScriptName]
        ///	CommandPath=[CommandPath]
        ///	CommandLine=[CommandLine].
        /// </summary>
        public static string SettingsContext {
            get {
                return ResourceManager.GetString("SettingsContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UNKNOWN.
        /// </summary>
        public static string UnknownUserName {
            get {
                return ResourceManager.GetString("UnknownUserName", resourceCulture);
            }
        }
    }
}
