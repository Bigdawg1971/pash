//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Management.Automation {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class HistoryStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HistoryStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Management.Automation.HistoryStrings", typeof(HistoryStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot add history because input object has invalid format..
        /// </summary>
        public static string AddHistoryInvalidInput {
            get {
                return ResourceManager.GetString("AddHistoryInvalidInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: {0} entries were cleared from the session history..
        /// </summary>
        public static string ClearHistoryResult {
            get {
                return ResourceManager.GetString("ClearHistoryResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command will clear all the entries from the session history..
        /// </summary>
        public static string ClearHistoryWarning {
            get {
                return ResourceManager.GetString("ClearHistoryWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier {0} is invalid. Specify a positive number and try again..
        /// </summary>
        public static string InvalidCountValue {
            get {
                return ResourceManager.GetString("InvalidCountValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The identifier {0} is invalid for a History identifier. Specify a positive number and try again..
        /// </summary>
        public static string InvalidIdGetHistory {
            get {
                return ResourceManager.GetString("InvalidIdGetHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Invoke-History cmdlet is getting called in loop..
        /// </summary>
        public static string InvokeHistoryLoopDetected {
            get {
                return ResourceManager.GetString("InvokeHistoryLoopDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process multiple history commands. Only a single command can be executed by invoke-history..
        /// </summary>
        public static string InvokeHistoryMultipleCommandsError {
            get {
                return ResourceManager.GetString("InvokeHistoryMultipleCommandsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count cannot be combined with multiple CommandLine parameters..
        /// </summary>
        public static string NoCountWithMultipleCmdLine {
            get {
                return ResourceManager.GetString("NoCountWithMultipleCmdLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Count cannot be combined with multiple Ids..
        /// </summary>
        public static string NoCountWithMultipleIds {
            get {
                return ResourceManager.GetString("NoCountWithMultipleIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate history for commandline {0}..
        /// </summary>
        public static string NoHistoryForCommandline {
            get {
                return ResourceManager.GetString("NoHistoryForCommandline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate history for Id {0}..
        /// </summary>
        public static string NoHistoryForId {
            get {
                return ResourceManager.GetString("NoHistoryForId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate history..
        /// </summary>
        public static string NoHistoryFound {
            get {
                return ResourceManager.GetString("NoHistoryFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate last history..
        /// </summary>
        public static string NoLastHistoryEntryFound {
            get {
                return ResourceManager.GetString("NoLastHistoryEntryFound", resourceCulture);
            }
        }
    }
}
