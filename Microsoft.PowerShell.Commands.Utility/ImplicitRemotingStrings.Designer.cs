//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.PowerShell.Commands.Utility {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ImplicitRemotingStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ImplicitRemotingStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.PowerShell.Commands.Utility.ImplicitRemotingStrings", typeof(ImplicitRemotingStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files cannot be loaded because the running of scripts is disabled on this system. Please provide a valid certificate with which to sign the files..
        /// </summary>
        public static string CertificateNeeded {
            get {
                return ResourceManager.GetString("CertificateNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new session for implicit remoting of &quot;{{0}}&quot; command....
        /// </summary>
        public static string CreateNewRunspaceMessageTemplate {
            get {
                return ResourceManager.GetString("CreateNewRunspaceMessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter your credentials for {0}..
        /// </summary>
        public static string CredentialRequestBody {
            get {
                return ResourceManager.GetString("CredentialRequestBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows PowerShell Credential Request.
        /// </summary>
        public static string CredentialRequestTitle {
            get {
                return ResourceManager.GetString("CredentialRequestTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create temporary file for implicit remoting module..
        /// </summary>
        public static string ErrorCannotCreateTemporaryFile {
            get {
                return ResourceManager.GetString("ErrorCannotCreateTemporaryFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy creation has been skipped for the following command: &apos;{0}&apos;, because it would shadow an existing local command.  Use the AllowClobber parameter if you want to shadow existing local commands..
        /// </summary>
        public static string ErrorCommandSkippedBecauseOfShadowing {
            get {
                return ResourceManager.GetString("ErrorCommandSkippedBecauseOfShadowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not resolve remote alias &apos;{0}&apos;..
        /// </summary>
        public static string ErrorCouldntResolveAlias {
            get {
                return ResourceManager.GetString("ErrorCouldntResolveAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running the {0} command in a remote session reported the following error: {1}..
        /// </summary>
        public static string ErrorFromRemoteCommand {
            get {
                return ResourceManager.GetString("ErrorFromRemoteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data returned by the remote {0} command is not in the expected format..
        /// </summary>
        public static string ErrorMalformedDataFromRemoteCommand {
            get {
                return ResourceManager.GetString("ErrorMalformedDataFromRemoteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No command proxies have been created, because all of the requested remote commands would shadow existing local commands.  Use the AllowClobber parameter if you want to shadow existing local commands..
        /// </summary>
        public static string ErrorNoCommandsImportedBecauseOfSkipping {
            get {
                return ResourceManager.GetString("ErrorNoCommandsImportedBecauseOfSkipping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running the {0} command in a remote session returned no results..
        /// </summary>
        public static string ErrorNoResultsFromRemoteEnd {
            get {
                return ResourceManager.GetString("ErrorNoResultsFromRemoteEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No session has been associated with this implicit remoting module.
        /// </summary>
        public static string ErrorNoRunspaceForThisModule {
            get {
                return ResourceManager.GetString("ErrorNoRunspaceForThisModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cmdlet needs the following commands in the remote session: Get-Command, Get-FormatData, Select-Object. The following commands are used, but optional: Get-Help, Measure-Object. Please make sure the remote session includes the required commands and try again..
        /// </summary>
        public static string ErrorRequiredRemoteCommandNotFound {
            get {
                return ResourceManager.GetString("ErrorRequiredRemoteCommandNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy creation has been skipped for &apos;{0}&apos; command, because its name didn&apos;t match Name  parameter..
        /// </summary>
        public static string ErrorSkippedNonRequestedCommand {
            get {
                return ResourceManager.GetString("ErrorSkippedNonRequestedCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extended type definition has been skipped for &apos;{0}&apos; type because its name did not match FormatTypeName parameter..
        /// </summary>
        public static string ErrorSkippedNonRequestedTypeDefinition {
            get {
                return ResourceManager.GetString("ErrorSkippedNonRequestedTypeDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy creation has been skipped for &apos;{0}&apos; command, because Windows PowerShell couldn&apos;t verify safety of a name of one of parameter aliases: &apos;{1}&apos;..
        /// </summary>
        public static string ErrorSkippedUnsafeAliasName {
            get {
                return ResourceManager.GetString("ErrorSkippedUnsafeAliasName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy creation has been skipped for &apos;{0}&apos; command, because Windows PowerShell couldn&apos;t verify its name as safe..
        /// </summary>
        public static string ErrorSkippedUnsafeCommandName {
            get {
                return ResourceManager.GetString("ErrorSkippedUnsafeCommandName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy creation has been skipped for &apos;{0}&apos; command, because Windows PowerShell couldn&apos;t verify safety of a name of one of parameters: &apos;{1}&apos;..
        /// </summary>
        public static string ErrorSkippedUnsafeParameterName {
            get {
                return ResourceManager.GetString("ErrorSkippedUnsafeParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy creation has been skipped for &apos;{0}&apos; command, because Windows PowerShell couldn&apos;t verify safety of a name of one of parameter sets: &apos;{1}&apos;..
        /// </summary>
        public static string ErrorSkippedUnsafeParameterSetName {
            get {
                return ResourceManager.GetString("ErrorSkippedUnsafeParameterSetName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit remoting event (session id: {0}; event handler id: {1}).
        /// </summary>
        public static string EventSourceIdentifier {
            get {
                return ResourceManager.GetString("EventSourceIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} could not be signed..
        /// </summary>
        public static string InvalidSigningOperation {
            get {
                return ResourceManager.GetString("InvalidSigningOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to by {0} cmdlet.
        /// </summary>
        public static string ModuleHeaderCommand {
            get {
                return ResourceManager.GetString("ModuleHeaderCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invoked with the following command line: {0}.
        /// </summary>
        public static string ModuleHeaderCommandLine {
            get {
                return ResourceManager.GetString("ModuleHeaderCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to generated on {0}.
        /// </summary>
        public static string ModuleHeaderDate {
            get {
                return ResourceManager.GetString("ModuleHeaderDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional parameter that can be used to specify a session this proxy module should work against.
        /// </summary>
        public static string ModuleHeaderRunspaceOverrideParameter {
            get {
                return ResourceManager.GetString("ModuleHeaderRunspaceOverrideParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit remoting module.
        /// </summary>
        public static string ModuleHeaderTitle {
            get {
                return ResourceManager.GetString("ModuleHeaderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating implicit remoting module ....
        /// </summary>
        public static string ProgressActivity {
            get {
                return ResourceManager.GetString("ProgressActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed..
        /// </summary>
        public static string ProgressStatusCompleted {
            get {
                return ResourceManager.GetString("ProgressStatusCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting command information from remote session ... {0} commands received.
        /// </summary>
        public static string ProgressStatusGetCommandProgress {
            get {
                return ResourceManager.GetString("ProgressStatusGetCommandProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting command information from remote session ....
        /// </summary>
        public static string ProgressStatusGetCommandStart {
            get {
                return ResourceManager.GetString("ProgressStatusGetCommandStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting formatting and output information from remote session ... {0} objects received.
        /// </summary>
        public static string ProgressStatusGetFormatDataProgress {
            get {
                return ResourceManager.GetString("ProgressStatusGetFormatDataProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting formatting and output information from remote session ....
        /// </summary>
        public static string ProgressStatusGetFormatDataStart {
            get {
                return ResourceManager.GetString("ProgressStatusGetFormatDataStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating a proxy command for &apos;{0}&apos; ....
        /// </summary>
        public static string ProgressStatusProxyGeneration {
            get {
                return ResourceManager.GetString("ProgressStatusProxyGeneration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the http proxy credentials that are used for the following connection: {0}.
        /// </summary>
        public static string ProxyCredentialRequestBody {
            get {
                return ResourceManager.GetString("ProxyCredentialRequestBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implicit remoting for {0}.
        /// </summary>
        public static string ProxyModuleDescription {
            get {
                return ResourceManager.GetString("ProxyModuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session for implicit remoting module at {{0}}.
        /// </summary>
        public static string ProxyRunspaceNameTemplate {
            get {
                return ResourceManager.GetString("ProxyRunspaceNameTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands available in the newly opened remote session are different than when the implicit remoting module was created.  Consider recreating the module using Export-PSSession cmdlet..
        /// </summary>
        public static string WarningMismatchedImplicitRemotingHash {
            get {
                return ResourceManager.GetString("WarningMismatchedImplicitRemotingHash", resourceCulture);
            }
        }
    }
}
