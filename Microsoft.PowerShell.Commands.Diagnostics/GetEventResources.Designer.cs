//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.PowerShell.Commands.Diagnostics {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class GetEventResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GetEventResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.PowerShell.Commands.Diagnostics.GetEventResources", typeof(GetEventResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cooked Values.
        /// </summary>
        public static string CookedValues {
            get {
                return ResourceManager.GetString("CookedValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot import more than one comma-separated (.csv) or tab-separated (.tsv) performance counter file  in each command..
        /// </summary>
        public static string Counter1FileLimit {
            get {
                return ResourceManager.GetString("Counter1FileLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot import more than 32 .blg counter log files in each command..
        /// </summary>
        public static string Counter32FileLimit {
            get {
                return ResourceManager.GetString("Counter32FileLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal performance counter API call failed. Error: {0:x8}..
        /// </summary>
        public static string CounterApiError {
            get {
                return ResourceManager.GetString("CounterApiError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Circular parameter will be ignored unless the MaxSize parameter is also specified..
        /// </summary>
        public static string CounterCircularNoMaxSize {
            get {
                return ResourceManager.GetString("CounterCircularNoMaxSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Continuous parameter and the MaxSamples parameter cannot be used in the same command..
        /// </summary>
        public static string CounterContinuousOrMaxSamples {
            get {
                return ResourceManager.GetString("CounterContinuousOrMaxSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} performance counter cannot be exported to the {1} file because it was not part of the first sample set..
        /// </summary>
        public static string CounterExportSampleNotInInitialSet {
            get {
                return ResourceManager.GetString("CounterExportSampleNotInInitialSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} file already exists. To overwrite this file, use the Force parameter in the Export-Counter command..
        /// </summary>
        public static string CounterFileExists {
            get {
                return ResourceManager.GetString("CounterFileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the StartTime parameter must be less than the value of the EndTime parameter..
        /// </summary>
        public static string CounterInvalidDateRange {
            get {
                return ResourceManager.GetString("CounterInvalidDateRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} format type is not a valid format for a counter file. Possible values for the Format parameter are .blg, .csv, or .tsv..
        /// </summary>
        public static string CounterInvalidFormat {
            get {
                return ResourceManager.GetString("CounterInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot import different types of performance log files in the same command.  Specify only one type of file in the Path parameter..
        /// </summary>
        public static string CounterNoMixedLogTypes {
            get {
                return ResourceManager.GetString("CounterNoMixedLogTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} file does not have the expected file name extension. Specify only .blg, .csv, or .tsv files when you use the Path parameter..
        /// </summary>
        public static string CounterNotALogFile {
            get {
                return ResourceManager.GetString("CounterNotALogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} performance counter path is either not valid or it is not present in the following files: {1}..
        /// </summary>
        public static string CounterPathInvalidOrNotInFile {
            get {
                return ResourceManager.GetString("CounterPathInvalidOrNotInFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} performance counter path  is not valid..
        /// </summary>
        public static string CounterPathIsInvalid {
            get {
                return ResourceManager.GetString("CounterPathIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid counter paths were found in the files..
        /// </summary>
        public static string CounterPathsInFilesInvalid {
            get {
                return ResourceManager.GetString("CounterPathsInFilesInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default values for this command failed. Error: {0:x8}..
        /// </summary>
        public static string CounterPathTranslationFailed {
            get {
                return ResourceManager.GetString("CounterPathTranslationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data in one of the performance counter samples is not valid. View the Status property for each PerformanceCounterSample object to make sure it contains valid data..
        /// </summary>
        public static string CounterSampleDataInvalid {
            get {
                return ResourceManager.GetString("CounterSampleDataInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve information about the {0} performance counter set because access was denied..
        /// </summary>
        public static string CounterSetEnumAccessDenied {
            get {
                return ResourceManager.GetString("CounterSetEnumAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following value is not in a valid DateTime format: {0}..
        /// </summary>
        public static string DateTimeExpected {
            get {
                return ResourceManager.GetString("DateTimeExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Windows PowerShell snap-in contains Windows Eventing and Performance Counter cmdlets..
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid Event Id must be specified..
        /// </summary>
        public static string EventIdNotSpecified {
            get {
                return ResourceManager.GetString("EventIdNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cmdlet can be run only on Microsoft Windows 7 and above..
        /// </summary>
        public static string ExportCtrWin7Required {
            get {
                return ResourceManager.GetString("ExportCtrWin7Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following export destination path is ambiguous: {0}..
        /// </summary>
        public static string ExportDestPathAmbiguous {
            get {
                return ResourceManager.GetString("ExportDestPathAmbiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to create the {0} file. Verify that the path is valid..
        /// </summary>
        public static string FileCreateFailed {
            get {
                return ResourceManager.GetString("FileCreateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open the {0} file for writing..
        /// </summary>
        public static string FileOpenFailed {
            get {
                return ResourceManager.GetString("FileOpenFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cmdlet requires Microsoft .NET Framework version 3.5 or greater..
        /// </summary>
        public static string GetEventDotNet35Required {
            get {
                return ResourceManager.GetString("GetEventDotNet35Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This cmdlet can run only on Microsoft Windows Vista and later versions of Windows..
        /// </summary>
        public static string GetEventVistaPlusRequired {
            get {
                return ResourceManager.GetString("GetEventVistaPlusRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event cannot be written because there are no events defined with id {0} for the provider {1}.  Please correct the event id and try again..
        /// </summary>
        public static string IncorrectEventId {
            get {
                return ResourceManager.GetString("IncorrectEventId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event cannot be written because the specified version {0} for event {1} is not defined for the provider {2}.  Please correct the version and try again..
        /// </summary>
        public static string IncorrectEventVersion {
            get {
                return ResourceManager.GetString("IncorrectEventVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} Context key-value is not a valid SID or NT account name..
        /// </summary>
        public static string InvalidContext {
            get {
                return ResourceManager.GetString("InvalidContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following value is not in a valid security identifier (SID) format: {0}. Enter a valid SID, such as S-1-5-32-544..
        /// </summary>
        public static string InvalidSIDFormat {
            get {
                return ResourceManager.GetString("InvalidSIDFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value &apos;{0}&apos; specified for keyword..
        /// </summary>
        public static string KeywordLongExpected {
            get {
                return ResourceManager.GetString("KeywordLongExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve information about the {0} log. Error: {1}..
        /// </summary>
        public static string LogInfoUnavailable {
            get {
                return ResourceManager.GetString("LogInfoUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify at least one Log, Provider or Path key-value pair..
        /// </summary>
        public static string LogProviderOrPathNeeded {
            get {
                return ResourceManager.GetString("LogProviderOrPathNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified providers do not write events to any of the specified logs..
        /// </summary>
        public static string LogsAndProvidersDontOverlap {
            get {
                return ResourceManager.GetString("LogsAndProvidersDontOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find any performance counter sets on the {0} computer: error {1:x8}. Verify that the {0} computer exists, that it is discoverable, and that you have sufficient privileges to view performance counter data on that computer..
        /// </summary>
        public static string NoCounterSetsOnComputer {
            get {
                return ResourceManager.GetString("NoCounterSetsOnComputer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve event message text..
        /// </summary>
        public static string NoEventMessage {
            get {
                return ResourceManager.GetString("NoEventMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find any performance counter sets on the {0} computer that match the following: {1}..
        /// </summary>
        public static string NoMatchingCounterSetsFound {
            get {
                return ResourceManager.GetString("NoMatchingCounterSetsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find any performance counter sets in the {0} files that match the following: {1}..
        /// </summary>
        public static string NoMatchingCounterSetsInFile {
            get {
                return ResourceManager.GetString("NoMatchingCounterSetsInFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No events were found that match the specified selection criteria..
        /// </summary>
        public static string NoMatchingEventsFound {
            get {
                return ResourceManager.GetString("NoMatchingEventsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not an event log on the {0} computer that matches &quot;{1}&quot;..
        /// </summary>
        public static string NoMatchingLogsFound {
            get {
                return ResourceManager.GetString("NoMatchingLogsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is not an event provider on the {0} computer that matches &quot;{1}&quot;..
        /// </summary>
        public static string NoMatchingProvidersFound {
            get {
                return ResourceManager.GetString("NoMatchingProvidersFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No provider found with name {0}..
        /// </summary>
        public static string NoProviderFound {
            get {
                return ResourceManager.GetString("NoProviderFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} path does not appear to be a valid log file path. Specify a valid file system path..
        /// </summary>
        public static string NotAFileSystemPath {
            get {
                return ResourceManager.GetString("NotAFileSystemPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} file does not appear to be a valid log file. Specify only .evtx, .etl, or .evt files as values of the Path parameter..
        /// </summary>
        public static string NotALogFile {
            get {
                return ResourceManager.GetString("NotALogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null value was encountered in the {0} hash table key. Null values are not permitted..
        /// </summary>
        public static string NullNotAllowedInHashtable {
            get {
                return ResourceManager.GetString("NullNotAllowedInHashtable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provided payload does not match with the template that was defined for event id {0}.  
        ///The defined template is following: 
        ///{1}.
        /// </summary>
        public static string PayloadMismatch {
            get {
                return ResourceManager.GetString("PayloadMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} provider writes events to the {1} log..
        /// </summary>
        public static string ProviderLogLink {
            get {
                return ResourceManager.GetString("ProviderLogLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve information about the {0} provider. Error: {1}..
        /// </summary>
        public static string ProviderMetadataUnavailable {
            get {
                return ResourceManager.GetString("ProviderMetadataUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provider name must be specified..
        /// </summary>
        public static string ProviderNotSpecified {
            get {
                return ResourceManager.GetString("ProviderNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructed structured query:
        ///{0}..
        /// </summary>
        public static string QueryTrace {
            get {
                return ResourceManager.GetString("QueryTrace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified providers do not write events to the {0} log. This log will be ignored..
        /// </summary>
        public static string SpecifiedProvidersDontWriteToLog {
            get {
                return ResourceManager.GetString("SpecifiedProvidersDontWriteToLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} event log file can be read only in the forward chronological order because it is an .etl or an .evt file. To see events from the {0} event log, use the Oldest parameter in the command..
        /// </summary>
        public static string SpecifyOldestForEtlEvt {
            get {
                return ResourceManager.GetString("SpecifyOldestForEtlEvt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} event log can be read only in the forward chronological order because it is an analytical or a debug log. To see events from the {0} event log, use the Oldest parameter in the command..
        /// </summary>
        public static string SpecifyOldestForLog {
            get {
                return ResourceManager.GetString("SpecifyOldestForLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp.
        /// </summary>
        public static string Timestamp {
            get {
                return ResourceManager.GetString("Timestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.
        /// </summary>
        public static string Vendor {
            get {
                return ResourceManager.GetString("Vendor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event cannot be written because multiple events with id {0} have beend defined for provider {1}.  Please provide a version for the event and try again..
        /// </summary>
        public static string VersionNotSpecified {
            get {
                return ResourceManager.GetString("VersionNotSpecified", resourceCulture);
            }
        }
    }
}
